<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on George Karampelas</title>
    <link>http://localhost:1313/</link>
    <description>Recent content in Home on George Karampelas</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <managingEditor>george.karampelas.26@gmail.com (George Karampelas)</managingEditor>
    <webMaster>george.karampelas.26@gmail.com (George Karampelas)</webMaster>
    <copyright>George Karampelas (CC BY 4.0)</copyright>
    <lastBuildDate>Mon, 21 Oct 2024 23:16:47 +0300</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Contact</title>
      <link>http://localhost:1313/_contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>george.karampelas.26@gmail.com (George Karampelas)</author>
      <guid>http://localhost:1313/_contact/</guid>
      <description>&lt;h2 id=&#34;contact-me&#34;&gt;Contact me&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Website&lt;/strong&gt;: &lt;a href=&#34;https://www.gkarampelas.gr&#34;&gt;www.gkarampelas.gr&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;LinkedIn&lt;/strong&gt;: &lt;a href=&#34;https://www.linkedin.com/in/george-karampelas&#34;&gt;George Karampelas&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;GitHub&lt;/strong&gt;: &lt;a href=&#34;https://github.com/Karampelas-26&#34;&gt;Karampelas-26&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Email&lt;/strong&gt;: &lt;a href=&#34;mailto:george.karampelas.26@gmail.com&#34;&gt;george.karampelas.26@gmail.com&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Phone&lt;/strong&gt;: +30 694 522 7237&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Location&lt;/strong&gt;: Athens, 11474, Greece&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;skills&#34;&gt;Skills&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Software Development&lt;/li&gt;&#xA;&lt;li&gt;Spring Framework&lt;/li&gt;&#xA;&lt;li&gt;Quick learner&lt;/li&gt;&#xA;&lt;li&gt;Problem solver&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;preferred-contact&#34;&gt;Preferred Contact&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Email&lt;/li&gt;&#xA;&lt;li&gt;Phone&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Bad Quality Code</title>
      <link>http://localhost:1313/blog/bad-quality-code/</link>
      <pubDate>Mon, 21 Oct 2024 23:16:47 +0300</pubDate><author>george.karampelas.26@gmail.com (George Karampelas)</author>
      <guid>http://localhost:1313/blog/bad-quality-code/</guid>
      <description>&lt;p&gt;As a programmer the last one and a half year, I am gonna say about something that everyone codes have said. Bad quality of code, yep that&amp;rsquo;s my topic. I am consider as the newest and lower seniority on my team, but after one and a half year of my career on the same project I miss my first days of just coding. Why? Because after some time of &amp;ldquo;PURE&amp;rdquo; implementation, testers found some bugs, something broken on production, change request from the client etc. Most of the times the problem is so small, bad quality of code that it is not readable maintainable and editable, for that reason you waste more time to understand the code than understand what the client asked again.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to start!</title>
      <link>http://localhost:1313/tutorials/tutorial/</link>
      <pubDate>Mon, 21 Oct 2024 23:16:47 +0300</pubDate><author>george.karampelas.26@gmail.com (George Karampelas)</author>
      <guid>http://localhost:1313/tutorials/tutorial/</guid>
      <description>&lt;h3 id=&#34;yep-every-new-begining-is-more-difficult-than-you-though-after-midnigth&#34;&gt;Yep every new begining is more difficult than you though after midnigth.&lt;/h3&gt;&#xA;&lt;p&gt;But this is not mean that you can not be a programmer or to start your carrer as programmer, as I believe are small steps every day of learning something new, passion to spend hours infront of your dark theme (or white for the boomers) and eager to explore.&lt;/p&gt;&#xA;&lt;p&gt;If you have the patience to search on all the Stack over flow or chat with Chat GPT with hours, I&amp;rsquo;m sorry you are not a programmer.&#xA;Programmer is that guy that can understand your problem and solve it with technology, he is gonna chose a programming language, framework, database, host and every technology that fits more on your problem/idea&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>One reason to NOT server Entity</title>
      <link>http://localhost:1313/blog/why-to-use-dto/</link>
      <pubDate>Mon, 21 Oct 2024 23:16:47 +0300</pubDate><author>george.karampelas.26@gmail.com (George Karampelas)</author>
      <guid>http://localhost:1313/blog/why-to-use-dto/</guid>
      <description>&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;&#xA;&lt;p&gt;What is the DTO, is Data Transfer Object, you use it hide fields from entity in simple words.&lt;/p&gt;&#xA;&lt;h3 id=&#34;why-to-use-it&#34;&gt;Why to use it?&lt;/h3&gt;&#xA;&lt;p&gt;It is highly recomended to use DTO, for numerous reasons:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;To hide fields that are not used.&lt;/li&gt;&#xA;&lt;li&gt;To hide sensitive data from client.&lt;/li&gt;&#xA;&lt;li&gt;To be flexible on changes on future.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;And more reasons that you should use DTOs, I want to stay on the last one. Most times when we implement on API and we see that the client wants exactly the entity as response we may use the entity as response on the client, with the excuse why to use mappers, create new class, etc. Let&amp;rsquo;s disguss about that with an example, below is a class on Java.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
